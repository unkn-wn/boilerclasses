name: Deploy Review App
on:
  # Run this workflow on every PR event. Existing review apps will be updated when the PR is updated.
  pull_request:
    types: [opened, reopened, synchronize, closed]
  # Add this new trigger to listen for comments
  issue_comment:
    types: [created]

env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  # Set these to your Fly.io organization and preferred region.

jobs:
  check_comment:
    runs-on: ubuntu-latest
    # Only run this job when the trigger was a  comment
    if: github.event_name == 'issue_comment'
    outputs:
      should_deploy: ${{ steps.check.outputs.should_deploy }}
      pr_number: ${{ steps.check.outputs.pr_number }}
    steps:
      - name: Check comment
        id: check
        run: |
          # Check if this is a PR comment (not an issue comment)
          if [ "${{ github.event.issue.pull_request }}" != "" ]; then
            # Check if the comment is from the specified user and contains the trigger phrase
            if [ "${{ github.event.comment.user.login }}" == "unkn-wn" ] && [[ "${{ github.event.comment.body }}" == *"deploy"* ]]; then
              echo "should_deploy=true" >> $GITHUB_OUTPUT
              echo "pr_number=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT
            else
              echo "should_deploy=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "should_deploy=false" >> $GITHUB_OUTPUT
          fi

  review_app:
    runs-on: ubuntu-latest
    needs: check_comment
    # Run on PR events OR if the comment check determined we should deploy
    if: |
      (github.event_name == 'pull_request' && github.event.action != 'closed') ||
      (github.event_name == 'issue_comment' && needs.check_comment.outputs.should_deploy == 'true')
    outputs:
      url: ${{ steps.deploy.outputs.url }}
    # Only run one deployment at a time per PR.
    concurrency:
      group: pr-${{ github.event.number }}

    # Deploying apps with this "review" environment allows the URL for the app to be displayed in the PR UI.
    # Feel free to change the name of this environment.
    environment:
      name: review
      # The script in the `deploy` sets the URL output for each review app.
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: Get code
        uses: actions/checkout@v4

      - name: Deploy PR app to Fly.io
        id: deploy
        uses: superfly/fly-pr-review-apps@1.2.1

